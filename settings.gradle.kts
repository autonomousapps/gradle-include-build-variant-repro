/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 * For more detailed information on multi-project builds, please refer to https://docs.gradle.org/8.8/userguide/multi_project_builds.html in the Gradle documentation.
 */

plugins {
  // Apply the foojay-resolver plugin to allow automatic download of JDKs
  id("org.gradle.toolchains.foojay-resolver-convention") version "0.8.0"
}

rootProject.name = "include-build-variant-repro"

includeBuild("misk") {
  dependencySubstitution {
    substitute(module("com.squareup.misk:misk")).using(project(":misk"))

    substitute(module("com.squareup.misk:misk-testing-api")).using(project(":misk-testing-api"))

    substitute(variant(module("com.squareup.misk:misk-aws-dynamodb")) {
      capabilities {
        // this works
        requireCapability("com.squareup.misk:misk-aws-dynamodb-test-fixtures")

        // this also works
        // requireCapability("com.squareup.misk:misk-aws-dynamodb:test-fixtures")

        // this doesn't work
        // requireCapability("test-fixtures")
      }
    }).using(project(":misk-aws-dynamodb"))

    // Fix issue on misk-aws2-dynamodb where it's not picked up after adding wisp substitution below
    substitute(module("com.squareup.misk:misk-aws2-dynamodb")).using(project(":misk-aws2-dynamodb"))

    // Substitute all Wisp modules with the local project
    rootDir.resolve("misk").resolve("wisp")
      .listFiles()?.filter { it.isDirectory }?.forEach { dir ->
        substitute(module("app.cash.wisp:${dir.name}")).using(project(":wisp:${dir.name}"))
      }
  }
}

include("lib")
